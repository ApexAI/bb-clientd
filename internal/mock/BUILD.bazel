# gazelle:ignore

load("@bazel_gomock//:gomock.bzl", "gomock")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

gomock(
    name = "aliases",
    out = "aliases.go",
    interfaces = [
        "FUSEDirectory",
        "FUSELeaf",
        "OutputPathPersistencyReadCloser",
        "OutputPathPersistencyStore",
        "ReaderAt",
        "WriterAt",
    ],
    library = "//internal/mock/aliases",
    package = "mock",
    tags = ["manual"],
)

gomock(
    name = "blobstore",
    out = "blobstore.go",
    interfaces = ["BlobAccess"],
    library = "@com_github_buildbarn_bb_storage//pkg/blobstore",
    package = "mock",
)

gomock(
    name = "cas",
    out = "cas.go",
    interfaces = ["IndexedTreeFetcher"],
    library = "//pkg/cas",
    package = "mock",
)

gomock(
    name = "clock",
    out = "clock.go",
    interfaces = ["Clock"],
    library = "@com_github_buildbarn_bb_storage//pkg/clock",
    package = "mock",
)

gomock(
    name = "filesystem",
    out = "filesystem.go",
    interfaces = [
        "Directory",
        "FileReader",
        "FileWriter",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/filesystem",
    package = "mock",
)

gomock(
    name = "filesystem_fuse",
    out = "filesystem_fuse.go",
    interfaces = [
        "DigestLookupFunc",
        "DirectoryContext",
        "InstanceNameLookupFunc",
        "OutputPath",
        "OutputPathFactory",
    ],
    library = "//pkg/filesystem/fuse",
    package = "mock",
)

gomock(
    name = "random",
    out = "random.go",
    interfaces = ["SingleThreadedGenerator"],
    library = "@com_github_buildbarn_bb_storage//pkg/random",
    package = "mock",
)

gomock(
    name = "re_cas",
    out = "re_cas.go",
    interfaces = ["DirectoryFetcher"],
    library = "@com_github_buildbarn_bb_remote_execution//pkg/cas",
    package = "mock",
)

gomock(
    name = "re_filesystem_fuse",
    out = "re_filesystem_fuse.go",
    interfaces = [
        "CASFileFactory",
        "ChildRemover",
        "EntryNotifier",
        "InitialContentsFetcher",
        "NativeLeaf",
        "PrepopulatedDirectory",
    ],
    library = "@com_github_buildbarn_bb_remote_execution//pkg/filesystem/fuse",
    package = "mock",
)

gomock(
    name = "storage_util",
    out = "storage_util.go",
    interfaces = ["ErrorLogger"],
    library = "@com_github_buildbarn_bb_storage//pkg/util",
    package = "mock",
)

go_library(
    name = "mock",
    srcs = [
        ":aliases.go",
        ":blobstore.go",
        ":cas.go",
        ":clock.go",
        ":filesystem.go",
        ":filesystem_fuse.go",
        ":random.go",
        ":re_cas.go",
        ":re_filesystem_fuse.go",
        ":storage_util.go",
    ],
    importpath = "github.com/buildbarn/bb-clientd/internal/mock",
    visibility = ["//:__subpackages__"],
    deps = [
        "//pkg/cas",
        "//pkg/filesystem/fuse",
        "//pkg/outputpathpersistency",
        "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:execution",
        "@com_github_buildbarn_bb_remote_execution//pkg/filesystem/fuse",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/outputpathpersistency",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/remoteoutputservice",
        "@com_github_buildbarn_bb_storage//pkg/blobstore",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/buffer",
        "@com_github_buildbarn_bb_storage//pkg/clock",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@com_github_buildbarn_bb_storage//pkg/filesystem",
        "@com_github_buildbarn_bb_storage//pkg/filesystem/path",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@com_github_golang_mock//gomock",
        "@com_github_hanwen_go_fuse_v2//fuse",
    ],
)
